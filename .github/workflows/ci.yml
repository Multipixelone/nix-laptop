name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
jobs:
  format:
    name: nix alejandra format
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: 'write'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get revision hash
        id: rev
        run: echo "rev=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            auto-optimise-store = true
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Format code
        run: |
          nix run \
            'nixpkgs#alejandra' -- .
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '⚙️ style: format ${{ steps.rev.outputs.rev }}'
          branch: main
          commit_options: '--no-verify --signoff'
  check:
    name: nix flake check
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write'
      contents: 'read'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            auto-optimise-store = true
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - name: Install SSH Key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Run flake check
        run: nix flake check
  build:
    name: build machines
    runs-on: ubuntu-latest
    needs: [check]
    strategy:
      matrix:
        machine:
          - host: zelda
            platform: x86-64-linux
          - host: link
            platform: x86-64-linux
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: |
          sudo mkdir -p /etc/nix
          echo "machine https://attic-cache.fly.dev password ${{ secrets.ATTIC_TOKEN }}" | sudo tee /etc/nix/netrc > /dev/null
          git config --global url."https://${{ secrets.GH_TOKEN_FOR_UPDATES }}@github.com".insteadOf https://github.com
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v13
        with:
          github-token: ${{ secrets.GH_TOKEN_FOR_UPDATES }}
          extra-conf: |
            fallback = true
            http-connections = 128
            max-substitution-jobs = 128
            substituters = https://attic-cache.fly.dev/system?priority=50 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:XwpCBI5UHFzt9tEmiq3v8S062HvTqWPUwBR8PoHSfSk=
      - uses: DeterminateSystems/magic-nix-cache-action@v7
      - name: Build and push system
        run: |
          nix build .#nixosConfigurations.${{ matrix.machine.host }}.config.system.build.toplevel
          nix run github:zhaofengli/attic#default login fly https://attic-cache.fly.dev ${{ secrets.ATTIC_KEY }}
          nix run github:zhaofengli/attic#default push system result -j 3
